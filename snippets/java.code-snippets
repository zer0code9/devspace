{
    "JAVA Long Comment": {
        "scope": "java",
        "prefix": "jacom",
        "body": ["/*", "\t${1:value}", "*/"]
    },
    "JAVA Object Variable": {
        "scope": "java",
        "prefix": "jaobj",
        "body": ["${1:type} {2:name} = new ${1}(${3:parameter});"],
        "description": "An object declaration"
    },
    "JAVA Primitive Variable": {
        "scope": "java",
        "prefix": "japri",
        "body": ["${1:type} {2:name} = ${3:value};"],
        "description": "A primitive variable declaration"
    },

    "JAVA Array": {
        "scope": "java",
        "prefix": "jaar",
        "body": ["${1:type}[] ${2:name} = new ${1}[{3:length}];"],
        "description": "An Array declaration"
    },
    "JAVA 2D Array": {
        "scope": "java",
        "prefix": "jadar",
        "body": ["${1:type}[][] ${2:name} = new ${1}[{3:row}][${4:column}];"],
        "description": "A 2D Array declaration"
    },
    "JAVA ArrayList": {
        "scope": "java",
        "prefix": "jaal",
        "body": ["ArrayList<${1:type}> ${2:name} = new ArrayList<${1}>();"],
        "description": "An ArrayList declaration"
    },
    "JAVA LinkedList": {
        "scope": "java",
        "prefix": "jaal",
        "body": ["LinkedList<${1:type}> ${2:name} = new LinkedList<${1}>();"],
        "description": "A LinkedList declaration"
    },
    "JAVA HashMap": {
        "scope": "java",
        "prefix": "jahm",
        "body": ["HashMap<${1:first}, ${2:second}> ${3:name} = new HashMap<${1}, ${2}>();"],
        "description": "A HashMap declaration"
    },
    "JAVA HashSet": {
        "scope": "java",
        "prefix": "jaas",
        "body": ["HashSet<${1:type}> ${2:name} = new HashSet<${1}>();"],
        "description": "A HashSet declaration"
    },
    "JAVA Iterator": {
        "scope": "java",
        "prefix": "jait",
        "body": ["Iterator<${1:type}> ${2:name} = ${3:Collection}.iterator();"],
        "description": "A Iterator declaration"
    },
    "JAVA Scanner": {
        "scope": "java",
        "prefix": "jascan",
        "body": ["Scanner ${1:name} = new Scanner(System.in);"],
        "description": "A Scanner declaration"
    },

    "JAVA If": {
        "scope": "java",
        "prefix": "jaif",
        "body": ["if (${1:expression}) {", "\t$0", "}"],
        "description": "An if condition"
    },
    "JAVA Elif": {
        "scope": "java",
        "prefix": "jaelif",
        "body": ["else if (${1:expression}) {", "\t$0", "}"],
        "description": "An else if condition"
    },
    "JAVA Else": {
        "scope": "java",
        "prefix": "jaelse",
        "body": ["else {", "\t$0", "}"],
        "description": "An else condition"
    },
    "JAVA TreeIf": {
        "scope": "java",
        "prefix": "jatif",
        "body": ["if (${1:expression}) {", "\t$2", "} else {", "\t$0", "}"],
        "description": "A tree if/else condition"
    },
    "JAVA TreeElif": {
        "scope": "java",
        "prefix": "jatelif",
        "body": ["if (${1:expression}) {", "\t$3", "} else if (${2:expression2}) {", "\t$4", "} else {", "\t$0", "}"],
        "description": "A tree if/elif/else condition"
    },

    "JAVA For Each": {
        "scope": "java",
        "prefix": "jafore",
        "body": ["for (const ${1:element} : ${2:array}) {", "\t$0", "}"],
        "description": "A for each loop"
    }, 
    "JAVA For Loop": {
        "scope": "java",
        "prefix": "jafor",
        "body": ["for (int ${1:name} = ${2:start}; ${1} <= ${3:end}; ${1}++) {", "\t$0", "}"],
        "description": "A for loop"
    },
    "JAVA While": {
        "scope": "java",
        "prefix": "jawhile",
        "body": ["while (${1:condition}) {", "\t$0", "}"],
        "description": "A while loop"
    },
    "JAVA Do While": {
        "scope": "java",
        "prefix": "jado",
        "body": ["do {", "\t$0", "} while (${1:condition})"],
        "description": "A do while loop"
    },
    "JAVA Switch": {
        "scope": "java",
        "prefix": "jsswitch",
        "body": ["switch (${1:expression}) {", "\tcase $2:", "\t\t$0", "\t\tbreak;", "\tcase $3:", "\t\t", "\t\tbreak;", "}"],
        "description": "A switch loop"
    },

    "JAVA Interface": {
        "scope": "java",
        "prefix": "jai",
        "body": ["public interface ${1:name} {", "\t$0", "}"],
        "description": "A class"
    },
    "JAVA Static Class": {
        "scope": "java",
        "prefix": "jasc",
        "body": ["public class ${1:name} {", "\t$0", "}"],
        "description": "A public class"
    },
    "JAVA Abstract Class": {
        "scope": "java",
        "prefix": "jaac",
        "body": ["abstract class ${1:name} {", "\t$0", "}"],
        "description": "An abstract class"
    },
    "JAVA Final Class": {
        "scope": "java",
        "prefix": "jafc",
        "body": ["final class ${1:name} {", "\t$0", "}"],
        "description": "A final class"
    },
    "JAVA Class": {
        "scope": "java",
        "prefix": "janc",
        "body": ["class ${1:name} {", "\t$0", "}"],
        "description": "A class"
    },
    "JAVA Constructor Method": {
        "scope": "java",
        "prefix": "jacm",
        "body": ["public ${1:name}(${2:parameters}) {", "\t$0", "}"],
        "description": "A constructor method"
    },
    "JAVA Full Method": {
        "scope": "java",
        "prefix": "jafm",
        "body": ["${1:privacy} ${2:method} ${3:type} ${4:name}(${5:parameters}) {", "\t$0", "}"],
        "description": "A full method declaration"
    },
    "JAVA User Method": {
        "scope": "java",
        "prefix": "jaum",
        "body": ["public static void ${1:name}(${2:parameters}) {", "\t$0", "}"],
        "description": "An user method"
    },
    "JAVA Static Method": {
        "scope": "java",
        "prefix": "jasm",
        "body": ["static void ${1:name}(${2:parameters}) {", "\t$0", "}"],
        "description": "A static method"
    },
    "JAVA Accessor Method": {
        "scope": "java",
        "prefix": "jaam",
        "body": ["public ${1:type} ${2:name}(${3:parameters}) {", "\t$0", "}"],
        "description": "An accessor/getter method"
    },
    "JAVA Mutator Method": {
        "scope": "java",
        "prefix": "jamm",
        "body": ["public ${1:type} ${2:name}(${3:parameters}) {", "\t$0", "}"],
        "description": "A mutator/setter method"
    },
    "JAVA Abstract Method": {
        "scope": "java",
        "prefix": "jaam",
        "body": ["abstract ${1:type} ${2:name}(${3:parameters}) {", "\t$0", "}"],
        "description": "A static method"
    },

    "JAVA Println": {
        "scope": "java",
        "prefix": "japrln",
        "body": ["System.out.println(${1:value});"],
        "description": "A println statement"
    },
    "JAVA Print": {
        "scope": "java",
        "prefix": "japr",
        "body": ["System.out.print(${1:value});"],
        "description": "A print statement"
    },
    "JAVA Random": {
        "scope": "java",
        "prefix": "jaran",
        "body": ["(int) (Math.random() * ((${1:max} - ${2:min}) + 1) + ${2}"],
        "description": "A random statement"
    },
}